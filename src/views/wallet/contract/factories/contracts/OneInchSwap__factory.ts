/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OneInchSwap,
  OneInchSwapInterface,
} from "../../contracts/OneInchSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107c3806100206000396000f3fe6080604052600436106100225760003560e01c806343a0a7f21461002e57600080fd5b3661002957005b600080fd5b61004161003c366004610601565b610053565b60405190815260200160405180910390f35b60008585826001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156100845750346100c1565b6100996001600160a01b03841633308a6101bc565b6100c16001600160a01b038416731111111254eeb25477b68fb85ed929f73a9605828961022d565b600080731111111254eeb25477b68fb85ed929f73a9605826001600160a01b03168389896040516100f392919061069c565b60006040518083038185875af1925050503d8060008114610130576040519150601f19603f3d011682016040523d82523d6000602084013e610135565b606091505b5091509150816101805760405162461bcd60e51b81526020600482015260116024820152700c525b98da0b5cddd85c0b59985a5b1959607a1b60448201526064015b60405180910390fd5b60008180602001905181019061019691906106ac565b5090506101ad6001600160a01b0386163383610356565b9b9a5050505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526102279085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610386565b50505050565b8015806102b65750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561027c57600080fd5b505afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b491906106d0565b155b6103215760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610177565b6040516001600160a01b03831660248201526044810182905261035190849063095ea7b360e01b906064016101f0565b505050565b6040516001600160a01b03831660248201526044810182905261035190849063a9059cbb60e01b906064016101f0565b60006103db826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104589092919063ffffffff16565b80519091501561035157808060200190518101906103f991906106e9565b6103515760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610177565b6060610467848460008561046f565b949350505050565b6060824710156104d05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610177565b600080866001600160a01b031685876040516104ec919061073e565b60006040518083038185875af1925050503d8060008114610529576040519150601f19603f3d011682016040523d82523d6000602084013e61052e565b606091505b509150915061053f8783838761054a565b979650505050505050565b606083156105b65782516105af576001600160a01b0385163b6105af5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610177565b5081610467565b61046783838151156105cb5781518083602001fd5b8060405162461bcd60e51b8152600401610177919061075a565b80356001600160a01b03811681146105fc57600080fd5b919050565b60008060008060006080868803121561061957600080fd5b610622866105e5565b9450610630602087016105e5565b935060408601359250606086013567ffffffffffffffff8082111561065457600080fd5b818801915088601f83011261066857600080fd5b81358181111561067757600080fd5b89602082850101111561068957600080fd5b9699959850939650602001949392505050565b8183823760009101908152919050565b600080604083850312156106bf57600080fd5b505080516020909101519092909150565b6000602082840312156106e257600080fd5b5051919050565b6000602082840312156106fb57600080fd5b8151801515811461070b57600080fd5b9392505050565b60005b8381101561072d578181015183820152602001610715565b838111156102275750506000910152565b60008251610750818460208701610712565b9190910192915050565b6020815260008251806020840152610779816040850160208701610712565b601f01601f1916919091016040019291505056fea264697066735822122032cc292a92a1e909a0b46f5fab43446008c63929ac0cecea15323ac4084e825b64736f6c63430008080033";

type OneInchSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OneInchSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OneInchSwap__factory extends ContractFactory {
  constructor(...args: OneInchSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OneInchSwap> {
    return super.deploy(overrides || {}) as Promise<OneInchSwap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OneInchSwap {
    return super.attach(address) as OneInchSwap;
  }
  override connect(signer: Signer): OneInchSwap__factory {
    return super.connect(signer) as OneInchSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OneInchSwapInterface {
    return new utils.Interface(_abi) as OneInchSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OneInchSwap {
    return new Contract(address, _abi, signerOrProvider) as OneInchSwap;
  }
}
