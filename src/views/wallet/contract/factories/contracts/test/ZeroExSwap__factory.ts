/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ZeroExSwap,
  ZeroExSwapInterface,
} from "../../../contracts/test/ZeroExSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "sellToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "buyToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "swapCallData",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610786806100206000396000f3fe6080604052600436106100225760003560e01c806343a0a7f21461002e57600080fd5b3661002957005b600080fd5b61004161003c3660046105e8565b610043565b005b60006001600160a01b03861673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156100715750346100ae565b6100866001600160a01b0387163330876101a3565b6100ae6001600160a01b03871673def1c0ded9bec7f1a1670819833240f027b25eff86610214565b60008073def1c0ded9bec7f1a1670819833240f027b25eff6001600160a01b03168386866040516100e0929190610683565b60006040518083038185875af1925050503d806000811461011d576040519150601f19603f3d011682016040523d82523d6000602084013e610122565b606091505b509150915060008180602001905181019061013d9190610693565b9050826101845760405162461bcd60e51b815260206004820152601060248201526f14d5d05417d0d0531317d1905253115160821b60448201526064015b60405180910390fd5b6101986001600160a01b038916338361033d565b505050505050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261020e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261036d565b50505050565b80158061029d5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561026357600080fd5b505afa158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b9190610693565b155b6103085760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161017b565b6040516001600160a01b03831660248201526044810182905261033890849063095ea7b360e01b906064016101d7565b505050565b6040516001600160a01b03831660248201526044810182905261033890849063a9059cbb60e01b906064016101d7565b60006103c2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661043f9092919063ffffffff16565b80519091501561033857808060200190518101906103e091906106ac565b6103385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161017b565b606061044e8484600085610456565b949350505050565b6060824710156104b75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161017b565b600080866001600160a01b031685876040516104d39190610701565b60006040518083038185875af1925050503d8060008114610510576040519150601f19603f3d011682016040523d82523d6000602084013e610515565b606091505b509150915061052687838387610531565b979650505050505050565b6060831561059d578251610596576001600160a01b0385163b6105965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161017b565b508161044e565b61044e83838151156105b25781518083602001fd5b8060405162461bcd60e51b815260040161017b919061071d565b80356001600160a01b03811681146105e357600080fd5b919050565b60008060008060006080868803121561060057600080fd5b610609866105cc565b9450610617602087016105cc565b935060408601359250606086013567ffffffffffffffff8082111561063b57600080fd5b818801915088601f83011261064f57600080fd5b81358181111561065e57600080fd5b89602082850101111561067057600080fd5b9699959850939650602001949392505050565b8183823760009101908152919050565b6000602082840312156106a557600080fd5b5051919050565b6000602082840312156106be57600080fd5b815180151581146106ce57600080fd5b9392505050565b60005b838110156106f05781810151838201526020016106d8565b8381111561020e5750506000910152565b600082516107138184602087016106d5565b9190910192915050565b602081526000825180602084015261073c8160408501602087016106d5565b601f01601f1916919091016040019291505056fea2646970667358221220288bb8ee5393ffd07b47185c32cb512841dfba0e7061d5b64ed14d2b0d855fec64736f6c63430008080033";

type ZeroExSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZeroExSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZeroExSwap__factory extends ContractFactory {
  constructor(...args: ZeroExSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZeroExSwap> {
    return super.deploy(overrides || {}) as Promise<ZeroExSwap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZeroExSwap {
    return super.attach(address) as ZeroExSwap;
  }
  override connect(signer: Signer): ZeroExSwap__factory {
    return super.connect(signer) as ZeroExSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZeroExSwapInterface {
    return new utils.Interface(_abi) as ZeroExSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZeroExSwap {
    return new Contract(address, _abi, signerOrProvider) as ZeroExSwap;
  }
}
